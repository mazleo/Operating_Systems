{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "186237d6-bf5d-11ef-b4fe-25358fe4e4db",
    "deck_config_uuid": "18623ee8-bf5d-11ef-b4fe-25358fe4e4db",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "buryInterdayLearning": false,
            "crowdanki_uuid": "18623ee8-bf5d-11ef-b4fe-25358fe4e4db",
            "dyn": false,
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 1,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": false,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 1,
                "perDay": 20
            },
            "newGatherPriority": 0,
            "newMix": 0,
            "newPerDayMinimum": 0,
            "newSortOrder": 0,
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "perDay": 200
            },
            "reviewOrder": 0,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [],
    "name": "Operating Systems",
    "newLimit": null,
    "newLimitToday": null,
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "css": ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    background-color: white;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Front",
                    "ord": 0,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Back",
                    "ord": 1,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic",
            "originalStockKind": 1,
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "What is an operating system?",
                "An operating system is software that manages a computer's hardware and acts as an intermediary between the computer user and the computer hardware. It also provides a basis for application programs."
            ],
            "guid": "h]tBmDOBTx",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the four components of a computer system?",
                "The four components of a computer system are the **hardware**, the **operating system**, the **application programs**, and the **user**."
            ],
            "guid": "mRL)XC4^~J",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the role of the operating system?",
                "The operating system controls the hardware and coordinates its use among the various application programs for the various users. It also provides the means for proper use of resources in the operation of the computer system. It is also a resource allocator."
            ],
            "guid": "J`&cq!PO6e",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the user's view of the computer?",
                "The user's view of the computer varies according to the interface being used. The goal is to maximize the work (or play) that the user is performing. The system is designed for ease of use."
            ],
            "guid": "cOTK7>Z5))",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the system's view of the computer?",
                "From the computer's point of view, the operating system is the program most intricately involved with the hardware. The operating system acts as the manager of resources."
            ],
            "guid": "hte*l583vw",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the kernel?",
                "The kernel is the one program running at all times on the computer. It is usually the first program that is run when a computer is turned on."
            ],
            "guid": "JRH8F%ud~H",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are system programs?",
                "System programs are programs that are associated with the operating system, but are not necessarily part of the kernel."
            ],
            "guid": "L9B,L4Szq%",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are application programs?",
                "Application programs are programs that are not associated with the operation of the system."
            ],
            "guid": "Gps7~3/7Jh",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the main components of a general-purpose computer?",
                "A modern general-purpose computer system consists of one or more CPUs and a number of device controllers connected through a common bus."
            ],
            "guid": "g]J#=r_kiw",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a device driver?",
                "Operating systems have a device driver for each device controller. The device driver understands the device controller and provides the rest of the operating system with a uniform interface to the device."
            ],
            "guid": "l<AoxV%p:4",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an interrupt?",
                "Hardware may trigger an interrupt by sending a signal to the CPU by way of the system bus. When the CPU is interrupted, it stops what it is doing and immediately transfers execution to a fixed location. The interrupt service routine executes; on completion, the CPU resumes the interrupted computation."
            ],
            "guid": "mXT:if;WJR",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the interrupt vector?",
                "A table of pointers to interrupt routines is called the interrupt vector. These locations hold the addresses of the interrupt service routines for the various devices. An interrupt vector is indexed by a unique number, given with the interrupt request, to provide the address of the interrupt service routine for the interrupting device."
            ],
            "guid": "Ep{+vwKr4J",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two interrupt request lines?",
                "Most CPUs have two interrupt request lines: **nonmaskable interrupt** and **maskable interrupt**. Nonmaskable interrupts are reserved for unrecoverable memory errors and cannot be turned off by the CPU. Maskable interrupts can be turned off and are used by device controllers to request service."
            ],
            "guid": "m8HyP3uNW.",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of a vectorized interrupt mechanism?",
                "The purpose of a vectorized interrupt mechanism is to reduce the need for a single interrupt handler to search all possible sources of interrupts to determine which one needs service."
            ],
            "guid": "i0=;O:DQk4",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is stored in main memory?",
                "General-purpose computers must first load the programs they will run into main memory. Main memory is also called random-access memory (RAM)."
            ],
            "guid": "t>)@3*~VBr",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a bootstrap program?",
                "When a computer is powered on, the first program to run is the bootstrap program, which loads the operating system. The bootstrap program is stored in nonvolatile memory, such as electrically erasable programmable read-only memory (EEPROM)."
            ],
            "guid": "EJJ/6#EGIz",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the basic units of storage?",
                "The basic unit of computer storage is the bit, which can have a value of either 0 or 1. A byte is 8 bits. A word is a given computer architecture's native unit of data, which is made up of one or more bytes."
            ],
            "guid": "cSxf4;R^a7",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between a kilobyte, megabyte, gigabyte, terabyte, and petabyte?",
                "A kilobyte (KB) is 1,024 bytes. A megabyte (MB) is 1,024 kilobytes. A gigabyte (GB) is 1,024 megabytes. A terabyte (TB) is 1,024 gigabytes. A petabyte (PB) is 1,024 terabytes."
            ],
            "guid": "gc*Xj]soT{",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the von Neumann architecture?",
                "A typical instruction-execution cycle on a system with a von Neumann architecture first fetches an instruction from memory, then decodes the instruction, and then may execute an operation on operands fetched from memory and stored in an internal register."
            ],
            "guid": "pKOs_[Sqpv",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between primary and secondary storage?",
                "Main memory is usually too small to store all needed programs and data permanently. Computer systems provide secondary storage as an extension of main memory. Main memory is volatile, while secondary storage is nonvolatile."
            ],
            "guid": "vL$Dc;K!q[",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are some examples of secondary storage?",
                "Hard disk drives (HDDs) and nonvolatile memory (NVM) devices are the most common secondary storage devices."
            ],
            "guid": "i-X==wUmwl",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is tertiary storage?",
                "Tertiary storage is slow and large enough that it is only used for special purposes, such as backup copies of material."
            ],
            "guid": "q3vw)BwfKr",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between volatile and nonvolatile storage?",
                "Volatile storage loses its contents when power is removed, while nonvolatile storage retains its contents when power is lost."
            ],
            "guid": "dx<bTUzN8D",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are mechanical storage devices?",
                "Mechanical storage devices include HDDs, optical disks, holographic storage, and magnetic tape."
            ],
            "guid": "lxIk:Kw=Z@",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are electrical storage devices?",
                "Electrical storage devices include flash memory, FRAM, and SRAM."
            ],
            "guid": "zC$[pZWNAl",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is Direct Memory Access (DMA)?",
                "Direct memory access (DMA) is used for bulk data movement. The device controller transfers an entire block of data directly to or from the device and main memory, with no intervention by the CPU."
            ],
            "guid": "H}L4V)NLKm",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a core?",
                "A core is the basic computation unit of the CPU. The core contains the component that executes instructions and registers for storing data locally."
            ],
            "guid": "qH2r{K)7EA",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a single-processor system?",
                "A single-processor system uses a single CPU with a single processing core."
            ],
            "guid": "Bgn6m~=1xb",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a multiprocessor system?",
                "A multiprocessor system has two or more processors, each with a single core. The processors share the computer bus and sometimes the clock, memory, and peripherals. Multicore systems have multiple cores residing on a single chip."
            ],
            "guid": "cl.S@J39S[",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is symmetric multiprocessing?",
                "Symmetric multiprocessing (SMP) systems have each peer CPU perform all tasks, including operating-system functions and user processes. Each CPU has its own set of registers, as well as its own cache."
            ],
            "guid": "dGk.%[i<Vm",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is non-uniform memory access (NUMA)?",
                "In NUMA systems, each CPU has its own local memory, connected by a shared system interconnect. A potential drawback with a NUMA system is increased latency when a CPU must access remote memory across the system interconnect."
            ],
            "guid": "f[WK`EMYFc",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a clustered system?",
                "A clustered system is composed of two or more individual systems or nodes joined together. Clustered systems share storage and are closely linked via a local-area network."
            ],
            "guid": "jp5:ut2[ho",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is asymmetric clustering?",
                "In asymmetric clustering, one machine is in hot-standby mode while the other is running applications. If the active server fails, the hot-standby host becomes the active server."
            ],
            "guid": "H4/83r:%2*",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is symmetric clustering?",
                "In symmetric clustering, two or more hosts are running applications and are monitoring each other."
            ],
            "guid": "k9fKls;Pp3",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is parallelization?",
                "Parallelization divides a program into separate components that run in parallel on individual cores in a computer or computers in a cluster."
            ],
            "guid": "z&j;t9QyTt",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a distributed lock manager (DLM)?",
                "A distributed lock manager (DLM) is used to provide access control and locking to ensure that no conflicting operations occur in a clustered system."
            ],
            "guid": "r.|mbKeaIR",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a storage area network (SAN)?",
                "A storage area network (SAN) allows many systems to attach to a pool of storage."
            ],
            "guid": "kfTAd?}zxa",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the bootstrap program's role?",
                "The bootstrap program must locate the operating-system kernel and load it into memory."
            ],
            "guid": "q8N44{6jOo",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a system call?",
                "A system call is a request from a user program to the operating system to perform tasks on the user program's behalf. A system call is typically treated by the hardware as a software interrupt."
            ],
            "guid": "DVGN{1RHg=",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a trap?",
                "A trap (or an exception) is a software-generated interrupt caused either by an error or by a specific request from a user program. "
            ],
            "guid": "z8p`}~S3sR",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is multiprogramming?",
                "Multiprogramming increases CPU utilization, as well as keeping users satisfied, by organizing programs so that the CPU always has one to execute. In a multiprogrammed system, a program in execution is termed a process."
            ],
            "guid": "x<*Gb(gsLs",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is multitasking?",
                "Multitasking is a logical extension of multiprogramming. In multitasking, the CPU executes multiple processes by switching among them, but the switches occur frequently, providing the user with a fast response time."
            ],
            "guid": "&/)(@f7V@",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is CPU scheduling?",
                "CPU scheduling is the process by which the system chooses which process will run next."
            ],
            "guid": "eF{u`w0%+-",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is virtual memory?",
                "Virtual memory is a technique that allows the execution of a process that is not completely in memory. It abstracts main memory into a large, uniform array of storage, separating logical memory as viewed by the user from physical memory."
            ],
            "guid": "pUV<Mr[J,G",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two modes of operation?",
                "The two modes of operation are user mode and kernel mode. A bit called the mode bit is added to the hardware of the computer to indicate the current mode."
            ],
            "guid": "sA:NZ(p4nY",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a privileged instruction?",
                "A privileged instruction is an instruction that can only be executed in kernel mode."
            ],
            "guid": "JL&wdmyG,j",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a virtual machine manager (VMM)?",
                "A virtual machine manager (VMM) has more privileges than user processes but fewer than the kernel."
            ],
            "guid": "g*<jqQdZOR",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of a timer?",
                "A timer is used to ensure that the operating system maintains control over the CPU. A timer can interrupt the computer after a specified period."
            ],
            "guid": "N[BF+fK|G,",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a process?",
                "A process is a program in execution. A process needs certain resources, including CPU time, memory, files, and I/O devices. A process is an active entity."
            ],
            "guid": "N^bM^>Zm0x",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a thread?",
                "A thread is a single-threaded process that has one program counter specifying the next instruction to execute."
            ],
            "guid": "dg&}Sd$#kP",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the operating system responsible for in connection with process management?",
                "The operating system is responsible for creating and deleting both user and system processes, scheduling processes and threads on the CPUs, suspending and resuming processes, providing mechanisms for process synchronization, and providing mechanisms for process communication."
            ],
            "guid": "g<3H=YAp/U",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the operating system responsible for in connection with memory management?",
                "The operating system is responsible for keeping track of which parts of memory are currently being used and which process is using them, allocating and deallocating memory space as needed, and deciding which processes and data to move into memory."
            ],
            "guid": "LO3lhub&9$",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the operating system responsible for in connection with file-system management?",
                "The operating system is responsible for creating and deleting files, creating and deleting directories to organize files, supporting primitives for manipulating files and directories, mapping files onto mass storage, and backing up files on stable (nonvolatile) storage media."
            ],
            "guid": "k.seLqG~_m",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the operating system responsible for in connection with secondary storage management?",
                "The operating system is responsible for mounting and unmounting storage, free-space management, storage allocation, disk scheduling, partitioning, and protection."
            ],
            "guid": "k$KwIJ5+u_",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is caching?",
                "Caching is an important principle in computer systems. Information is normally kept in some storage system (such as main memory). As it is used, it is copied into a faster storage system—the cache—on a temporary basis."
            ],
            "guid": "p%31KUra=8",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is cache coherency?",
                "Cache coherency is the situation where multiple copies of the same data may exist in different caches. If an update to the value of data in one cache is not immediately reflected in all other caches where it resides, inconsistencies can result."
            ],
            "guid": "H;GvITu[nX",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the operating system's role in I/O system management?",
                "The operating system's role in I/O system management is to hide the peculiarities of specific hardware devices from the user. The I/O subsystem consists of a memory-management component, a general device-driver interface, and drivers for specific hardware devices."
            ],
            "guid": "w5{joPHdA}",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of protection?",
                "Protection is any mechanism for controlling the access of processes or users to the resources defined by a computer system. Protection must provide means to specify the controls to be imposed and to enforce those controls. Protection can improve reliability by detecting latent errors at the interface between component subsystems."
            ],
            "guid": "u[!9yOaB`f",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a user ID?",
                "A user ID is a unique numerical identifier assigned to each user. When a user logs in to the system, the authentication stage determines the appropriate user ID for the user."
            ],
            "guid": "g6/_-:t<$=",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a group identifier?",
                "A group identifier is used to implement sets of users who can be given certain access privileges."
            ],
            "guid": "MAm&]i_q8C",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is virtualization?",
                "Virtualization is a technology that allows us to abstract the hardware of a single computer into several different execution environments, thereby creating the illusion that each execution environment is running on its own private computer."
            ],
            "guid": "rc2sFKC=(v",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is emulation?",
                "Emulation is when a computer simulates computer hardware in software."
            ],
            "guid": "FMz=u!G%&z",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a virtual machine?",
                "A virtual machine is an environment created by virtualization that seems like its own private computer."
            ],
            "guid": "dHkCxEX|tB",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a distributed system?",
                "A distributed system is a collection of physically separate, possibly heterogeneous computer systems that are networked to provide users with access to the various resources that the system maintains."
            ],
            "guid": "s>8L?;Ii-Y",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a network operating system?",
                "A network operating system is an operating system that provides features such as file sharing across the network. A computer running a network operating system acts as an autonomous computer on the network."
            ],
            "guid": "vLN=.ryXm*",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a distributed operating system?",
                "A distributed operating system provides a less autonomous environment. The different computers communicate closely enough to provide the illusion that only a single operating system controls the network."
            ],
            "guid": "Pb+WqI)eOu",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a local-area network (LAN)?",
                "A local-area network (LAN) connects computers within a room, a building, or a campus."
            ],
            "guid": "vord5~5`[C",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a wide-area network (WAN)?",
                "A wide-area network (WAN) usually links buildings, cities, or countries."
            ],
            "guid": "kIn$@`N!aY",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a metropolitan-area network (MAN)?",
                "A metropolitan-area network (MAN) could link buildings within a city."
            ],
            "guid": "z.W1$g+kdH",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a personal-area network (PAN)?",
                "A personal-area network (PAN) is created between a phone and a headset or a smartphone and a desktop computer."
            ],
            "guid": "lIKPM3B5Sa",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a linked list?",
                "A linked list is a data structure in which items are linked to one another."
            ],
            "guid": "vj6LI>u(GP",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a stack?",
                "A stack is a sequentially ordered data structure that uses the last-in, first-out (LIFO) principle for adding and removing items."
            ],
            "guid": "d)oc75aOhM",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a queue?",
                "A queue is a sequentially ordered data structure that uses the first-in, first-out (FIFO) principle."
            ],
            "guid": "pT8qO]reDM",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a tree?",
                "A tree is a data structure that can be used to represent data hierarchically."
            ],
            "guid": "P2;zWNnW|N",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a binary search tree?",
                "A binary search tree requires an ordering between the parent's two children in which left child <= right child."
            ],
            "guid": "d&AGA2A)CQ",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a hash function?",
                "A hash function takes data as its input, performs a numeric operation on the data, and returns a numeric value. This numeric value can then be used as an index into a table to quickly retrieve the data."
            ],
            "guid": "vKc*f1i]d>",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a bitmap?",
                "A bitmap is a string of n binary digits that can be used to represent the status of n items. For example, a 0 can indicate that a resource is available, while a 1 indicates that it is unavailable."
            ],
            "guid": "A0=)yQK?Pp",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the client-server model?",
                "In the client-server model, a server system satisfies requests generated by client systems. The server provides an interface to which a client can send a request to perform an action. The server executes the action and sends the results to the client."
            ],
            "guid": "L[+E-x`ft7",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the peer-to-peer model?",
                "In the peer-to-peer model, clients and servers are not distinguished from one another. Instead, all nodes within the system are considered peers, and each may act as either a client or a server, depending on whether it is requesting or providing a service."
            ],
            "guid": "NbZ5<3eNT(",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is cloud computing?",
                "Cloud computing is a type of computing that delivers computing, storage, and even applications as a service across a network."
            ],
            "guid": "O!x@fFjD`x",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a public cloud?",
                "A public cloud is a cloud available via the Internet to anyone willing to pay for the services."
            ],
            "guid": "qQdw9YE8s2",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a private cloud?",
                "A private cloud is a cloud run by a company for that company's own use."
            ],
            "guid": "sg>WDyFqf%",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a hybrid cloud?",
                "A hybrid cloud is a cloud that includes both public and private cloud components."
            ],
            "guid": "JqXL9sCZC(",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is software as a service (SaaS)?",
                "Software as a service (SaaS) is one or more applications available via the Internet."
            ],
            "guid": "K1S4.[G=,q",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is platform as a service (PaaS)?",
                "Platform as a service (PaaS) is a software stack ready for application use via the Internet."
            ],
            "guid": "r%xJx:@N:a",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is infrastructure as a service (IaaS)?",
                "Infrastructure as a service (IaaS) is servers or storage available over the Internet."
            ],
            "guid": "A|U(UT{b){",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are real-time embedded systems?",
                "Real-time embedded systems are systems in which rigid time requirements have been placed on the operation of a processor or the flow of data."
            ],
            "guid": "rVPNNYnESS",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is free and open-source software?",
                "Free and open-source software is available in source-code format rather than as compiled binary code. Free software is licensed to allow no-cost use, redistribution, and modification. Open-source software does not necessarily offer such licensing."
            ],
            "guid": "tMf(Reqk,{",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are some examples of free and open-source operating systems?",
                "GNU/Linux, FreeBSD, and Solaris are examples of popular open-source systems."
            ],
            "guid": "iXBTxE9}7`",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is copyleft?",
                "Copyleft is a form of licensing invented by Stallman that gives anyone that possesses a copy of the work the four essential freedoms and that requires that the redistribution must preserve these freedoms."
            ],
            "guid": "HwhUr&AL,H",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the primary purpose of an operating system?",
                "An operating system provides an **environment** for the execution of programs. It provides services to both users and programs. These services are accessed through an **interface**."
            ],
            "guid": "Q0S`wfu-a7",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "List the main services provided by an operating system.",
                "*   **User Interface:**  Provides ways for users to interact with the system (**GUI**, **CLI**, **touch-screen**).\n*   **Program Execution:** Loads and executes programs.\n*   **I/O Operations:** Manages input/output devices.\n*   **File-system Manipulation:** Creates, deletes, and manages files and directories.\n*   **Communications:** Enables interprocess communication, either locally or across a network.\n*   **Error Detection:** Detects and handles errors.\n*   **Resource Allocation:** Manages resources such as CPU, memory, and storage.\n*   **Logging:** Tracks system usage.\n*   **Protection and Security:** Controls access to resources and ensures data security."
            ],
            "guid": "m8o@67YVx|",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the three fundamental types of user interfaces provided by operating systems?",
                "*   **Command-line Interface (CLI):** Allows users to enter commands directly.\n*   **Graphical User Interface (GUI):** Uses a mouse and icons for interaction.\n*   **Touch-screen Interface:**  Uses touch gestures for interaction."
            ],
            "guid": "O8&)1L_/1B",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a \"command interpreter\" or \"shell\"?",
                "A command interpreter or shell is a program that reads commands entered by the user and executes them by translating them to system calls. It can be a special program that is run when the user logs on. Examples include the **Bourne-Again shell (bash)**, **C shell**, and **Korn shell**."
            ],
            "guid": "c+]GV!W(/)",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a system call?",
                "A system call is a request by a user-level program to access a service provided by the operating system. It provides the interface between a running program and the operating system. System calls are often written in C or C++, but may require assembly language for certain low-level tasks."
            ],
            "guid": "u#m$YOwc0",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an Application Programming Interface (API)?",
                "An **API** specifies a set of functions that are available to an application programmer, including the parameters and return values that can be expected. An API is a higher-level interface built on top of system calls. The API makes the system calls more convenient for the programmer."
            ],
            "guid": "igPju$-4~i",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "How are parameters passed during a system call?",
                "Parameters for system calls can be passed in registers, in a block of memory, or on a stack. **Linux** uses a combination of these approaches."
            ],
            "guid": "O1d%Y]bEx0",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the major categories of system calls?",
                "*   **Process Control**\n*   **File Management**\n*   **Device Management**\n*   **Information Maintenance**\n*   **Communications**\n*   **Protection**"
            ],
            "guid": "ijB~TY]C6y",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Give examples of system calls for process control in Windows and Unix.",
                "*   **Windows:** `CreateProcess()`, `ExitProcess()`, `WaitForSingleObject()`\n*   **Unix:** `fork()`, `exit()`, `wait()`"
            ],
            "guid": "K#RtO^Dci~",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a run-time environment (RTE)?",
                "The **RTE** is the full suite of software needed to execute applications written in a given programming language including compilers, interpreters, libraries, and loaders."
            ],
            "guid": "QX:~Q-d=#b",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a \"boot loader\"?",
                "A boot loader is a small piece of software that loads the operating system kernel into memory when a computer is started. It initializes the system and prepares it for the operating system to take over."
            ],
            "guid": "dFKs@!YSDt",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Describe the concept of a \"monolithic\" operating system structure.",
                "A **monolithic** operating system has **no structure**; all its functionality is contained in a single binary file that runs in a single address space. This approach is simple, but can be difficult to modify or debug. Examples include older versions of **UNIX** and **Linux**."
            ],
            "guid": "F|fq:as3zb",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Describe the \"layered\" operating system structure.",
                "A **layered** operating system is divided into **multiple layers**, where each layer depends only on the layers below it. The bottom layer is the hardware, and the highest layer is the user interface. This approach simplifies debugging and system verification."
            ],
            "guid": "PyRm)LPb/W",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Describe the \"microkernel\" operating system structure.",
                "A **microkernel** aims to keep the kernel as small as possible, with most operating system services running as user-level processes. This approach improves modularity and security. Communication between processes is typically done using **message passing**."
            ],
            "guid": "cv)?yL1%JI",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are \"loadable kernel modules\"?",
                "**Loadable kernel modules (LKMs)** are a way of adding functionality to the operating system kernel at runtime. This approach allows for dynamic modification of the kernel without requiring a reboot. This is a modular approach."
            ],
            "guid": "BV}I:$:#eY",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a \"hybrid\" operating system?",
                "A **hybrid** system combines different architectural approaches, such as monolithic and microkernel. For example, **Linux** is monolithic, but also supports loadable kernel modules."
            ],
            "guid": "P@7/TZ{P[j",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between mechanism and policy in operating system design?",
                "**Mechanism** refers to *how* something is done. **Policy** refers to *what* is done. It is good to separate them for flexibility. A mechanism can implement different policies."
            ],
            "guid": "m1K2h6=VuL",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Why is it important to write an operating system in a high-level language?",
                "Writing in high-level languages like **C** or **C++** makes the code faster to write, more compact, and easier to understand and debug. It also makes the system easier to port to other hardware."
            ],
            "guid": "tQ$(7RK+c!",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of the \"linker\" in the build process?",
                "The linker combines relocatable object files into a single binary executable file."
            ],
            "guid": "AMor[uJ1vS",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of the \"loader\" in the build process?",
                "The loader loads the executable file into memory, making it ready to run."
            ],
            "guid": "B##F[5p<`s",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the main reasons why applications are operating-system specific?",
                "*   Different binary formats for program executables.\n*   Different instruction sets for different CPUs.\n*   Different system calls."
            ],
            "guid": "ze~CY%JB2J",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an Application Binary Interface (ABI)?",
                "An **ABI** defines how different components of binary code can interface for a given operating system on a given architecture. It includes details about data types, register usage, and how parameters are passed in system calls."
            ],
            "guid": "m@*MpbJQbs",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two primary goals in designing an operating system?",
                "*   **User goals:** The system should be convenient to use, easy to learn, reliable, safe, and fast.\n*   **System goals:** The system should be easy to design, implement, maintain, and should be flexible, reliable, error-free, and efficient."
            ],
            "guid": "uM62NcM$u$",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the typical process for building and booting an operating system?",
                "1.  Write the operating system source code.\n2.  Configure the operating system.\n3.  Compile the operating system.\n4.  Install the operating system.\n5.  Boot the computer."
            ],
            "guid": "pbYkg}UfY7",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is \"system generation\" or \"system build\"?",
                "It's the process of configuring an operating system. It specifies which features are included, and varies the configuration based on the system for which the operating system is being built."
            ],
            "guid": "HXaHQatq$V",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a \"bootstrap program\"?",
                "A small piece of code that locates the operating system kernel and loads it into memory. It is also known as the **boot loader**."
            ],
            "guid": "p9$t1v8T-S",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is \"debugging\" in the context of operating systems?",
                "Debugging is the process of identifying and fixing errors in both the hardware and the software of a system. It includes failure analysis and performance tuning."
            ],
            "guid": "whj%n|#6VO",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are \"counters\" in operating system debugging and performance tuning?",
                "Counters are a collection of system-wide or per-process statistics. They keep track of system activity, such as the number of system calls made, or the number of operations on a disk or network."
            ],
            "guid": "IWzR4j-jG1",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is \"tracing\" in operating system debugging and performance tuning?",
                "Tracing involves following the execution of a program, often using system-call invocations, to identify bottlenecks or other performance issues."
            ],
            "guid": "wPo=MA3-rh",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the BCC (BPF Compiler Collection)?",
                "**BCC** is a toolkit for dynamic kernel tracing in **Linux**. It's written in Python, embeds C code, and interfaces with **eBPF**. This tool helps to debug interactions between the user-level and kernel code."
            ],
            "guid": "egM,~P3b-M",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        }
    ],
    "reviewLimit": null,
    "reviewLimitToday": null
}