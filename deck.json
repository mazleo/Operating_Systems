{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "186237d6-bf5d-11ef-b4fe-25358fe4e4db",
    "deck_config_uuid": "18623ee8-bf5d-11ef-b4fe-25358fe4e4db",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "buryInterdayLearning": false,
            "crowdanki_uuid": "18623ee8-bf5d-11ef-b4fe-25358fe4e4db",
            "dyn": false,
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 1,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": false,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 1,
                "perDay": 20
            },
            "newGatherPriority": 0,
            "newMix": 0,
            "newPerDayMinimum": 0,
            "newSortOrder": 0,
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "perDay": 200
            },
            "reviewOrder": 0,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [],
    "name": "Operating Systems",
    "newLimit": null,
    "newLimitToday": null,
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "css": ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    background-color: white;\n}\n.cloze {\n    font-weight: bold;\n    color: blue;\n}\n.nightMode .cloze {\n    color: lightblue;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Text",
                    "ord": 0,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Back Extra",
                    "ord": 1,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Cloze",
            "originalStockKind": 5,
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{cloze:Text}}<br>\n{{Back Extra}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Cloze",
                    "ord": 0,
                    "qfmt": "{{cloze:Text}}"
                }
            ],
            "type": 1
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "css": ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    background-color: white;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Front",
                    "ord": 0,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "name": "Back",
                    "ord": 1,
                    "plainText": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic",
            "originalStockKind": 1,
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is an operating system?<br></span><br><span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">An operating system is&nbsp;</span>{{c1::software<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\"> that manages a computer's hardware</span>}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">&nbsp;and&nbsp;</span>{{c2::acts as an intermediary between the computer user and the computer hardware}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">. It provides a basis for&nbsp;</span>{{c3::application programs}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">&nbsp;and is responsible for allocating resources such as the&nbsp;</span>{{c4::CPU}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">,&nbsp;</span>{{c5::memory}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">, and&nbsp;</span>{{c6::I/O devices}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">.</span>",
                ""
            ],
            "guid": "qA`N]vjQeT",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the four main components of a computer system?<br><br>The four main components are:<br><ul><li>{{c1::Hardware}}: {{c5::the CPU, memory, and I/O devices}}</li><li>{{c2::Operating system}}: {{c6::controls and coordinates the use of hardware among various application programs and users}}</li><li>{{c3::Application programs}}: {{c7::such as word processors, compilers, and web browsers, define how system resources are used to solve users' computing problems}}</li><li>{{c4::Users}}: {{c8::interact with the system}}</li></ul>",
                ""
            ],
            "guid": "c[RC=V$y&_",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Describe the user's view of the computer system.<br><br>The user's view {{c1::varies depending on the interface being used}}. The goal from the user perspective is to {{c2::maximize the work (or play) they can accomplish}}, with a focus on {{c3::ease of use}}, {{c4::performance}}, and {{c5::security}}. Users are generally not concerned with how the hardware and software resources are shared.",
                ""
            ],
            "guid": "PG#n2;_at<",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Describe the system's view of the operating system.<br><b><br></b>From the computer's point of view, the operating system is a {{c1::resource allocator}}&nbsp;and a {{c2::control program}}. As a {{c1::resource allocator}}, the operating system {{c1::manages resources}} such as {{c3::CPU time}}, {{c4::memory space}}, and {{c5::I/O devices}}, allocating them to specific programs and users. As a {{c2::control program}}, it manages the {{c6::execution of user programs to prevent errors and improper use of the computer, especially regarding I/O devices}}.",
                ""
            ],
            "guid": "ro{avW?8=R",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the kernel?",
                "The kernel is the one program running at all times on the computer. The kernel is part of the operating system, but the operating system includes other programs."
            ],
            "guid": "dm|S2&&[0+",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the role of a device driver?",
                "An operating system has a device driver for each device controller. The device driver provides a uniform interface to the device for the rest of the operating system."
            ],
            "guid": "r)Y?UV+%.,",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Explain how an interrupt works.<br><br><ul><li>{{c1::Hardware triggers an interrupt by sending a signal to the CPU.&nbsp;}}</li><li>{{c2::The CPU then stops what it is doing, and transfers execution to a fixed location that contains the starting address of the interrupt service routine.&nbsp;}}</li><li>{{c3::After completion of the service routine, the CPU resumes computation as if the interrupt had not occurred.}}</li></ul>Interrupts are a key way in which hardware interacts with the operating system.<br>",
                ""
            ],
            "guid": "j;(|V8L2WP",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an interrupt vector?",
                "An interrupt vector is an array or table of addresses of the interrupt service routines for the various devices. Each address is indexed by a unique number given with the interrupt request."
            ],
            "guid": "B_o3f1|t8a",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two types of interrupt requests?<br><br>There are two interrupt request lines:<br><br><ul><li>{{c1::Nonmaskable interrupts}}: {{c3::Reserved for events such as unrecoverable memory errors}}</li><li>{{c2::Maskable interrupts}}: {{c4::Can be turned off by the CPU before the execution of critical instruction sequences that must not be interrupted.}}</li></ul>",
                ""
            ],
            "guid": "ETVivrUL?[",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the purpose of the interrupt mechanism?",
                "The purpose is to reduce the need for a single interrupt handler to search all possible sources of interrupts. The interrupt mechanism also implements a system of interrupt priority levels."
            ],
            "guid": "exE^@j-SVY",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is main memory?",
                "Main memory, also known as random-access memory (RAM), is where programs are loaded to be executed. It is volatile, meaning its contents are lost when power is turned off."
            ],
            "guid": "Z2co0zmT]",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a bootstrap program?",
                "A bootstrap program is the first program that runs on computer power-up. It loads the operating system into memory."
            ],
            "guid": "n26~~_2{rG",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the units of storage?<br><br><ul><li>{{c1::A bit is the basic unit, representing 0 or 1.}}<br></li><li>{{c2::A byte is typically 8 bits.}}<br></li><li>{{c3::A word is a given computer architecture's native unit of data, made up of one or more bytes.}}<br></li></ul>",
                ""
            ],
            "guid": "f3wR)!|[kJ",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is secondary storage?<br><br>{{c1::Secondary storage is non-volatile storage that can hold large quantities of data permanently}}. {{c2::Hard-disk drives (HDDs)}} and {{c3::nonvolatile memory (NVM)}} devices are the most common forms. Secondary storage is {{c4::slower than main memory}}.",
                ""
            ],
            "guid": "y$*<{Ue<qk",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is tertiary storage?",
                "Tertiary storage is slow and large, used for special purposes like backup copies on devices like magnetic tape."
            ],
            "guid": "lu3u;F@<c5",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is volatile storage?",
                "Volatile storage loses its content when power is removed. Main memory is an example of volatile storage."
            ],
            "guid": "iH`,%-+=N8",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is non-volatile storage (NVS)?",
                "Non-volatile storage retains its contents when power is lost. Secondary storage such as hard drives and flash memory are examples of non-volatile storage."
            ],
            "guid": "iP>3nud$6R",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is direct memory access (DMA)?",
                "DMA is used for bulk data movement, where a device controller transfers data directly to or from main memory without CPU intervention, which reduces overhead."
            ],
            "guid": "r7J<|<@IXF",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a single-processor system?",
                "A single-processor system uses only one general-purpose CPU. Special-purpose processors can also exist in these systems, but they are not for general use."
            ],
            "guid": "bp5]:1F}ax",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a multiprocessor system?",
                "A multiprocessor system has two or more processors that share the computer bus, memory, and peripheral devices. There are symmetric and non-uniform memory access multiprocessors."
            ],
            "guid": "h8`|o;7{U!",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is symmetric multiprocessing (SMP)?",
                "In SMP, each processor performs all tasks."
            ],
            "guid": "Q.a9+,qdys",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a core?",
                "A core is the basic computation unit of the CPU. A multicore CPU has multiple cores on the same chip."
            ],
            "guid": "LWGd<Dr;c&",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is non-uniform memory access (NUMA)?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">In NUMA, each CPU has its own local memory, and CPUs are connected via an interconnect. Accessing remote memory is slower.</span>"
            ],
            "guid": "K9`-UpQWE*",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a clustered system?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A clustered system is composed of two or more individual systems (nodes) that are loosely coupled. They share storage and are connected via a local-area network (LAN).</span>"
            ],
            "guid": "20S/YD6Oq",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is asymmetric clustering?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">In asymmetric clustering, one machine is in hot-standby while the other is running the applications. If the active server fails, the hot-standby host becomes the active server.</span>"
            ],
            "guid": "vW(&?<&I6@",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is symmetric clustering?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">In symmetric clustering, two or more hosts are running applications and monitoring each other.</span>"
            ],
            "guid": "PNhki:D>Dn",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is parallelization?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Parallelization is a technique that divides a program into separate components that can run concurrently on different processors or computers in a cluster.</span>"
            ],
            "guid": "Gdv/jH`k2#",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a distributed lock manager (DLM)?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A DLM is used in some clustered systems to ensure that only one process has access to a particular piece of data at any time.</span>"
            ],
            "guid": "gJzD_)|T;2",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the bootstrap process?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">When a computer is powered on, a bootstrap program is loaded from firmware. The program initializes all aspects of the system, loads the operating system kernel into memory, and starts system services, allowing the system to become fully booted.</span>"
            ],
            "guid": "ruG7bbJxUl",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a trap or exception?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A trap or exception is a software-generated interrupt caused by an error, such as division by zero or invalid memory access.</span>"
            ],
            "guid": "u2K~TCB.Fz",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a system call?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A system call is a request from a user program to the operating system to perform a specific task.</span>"
            ],
            "guid": "z=!:y8ZG10",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is multiprogramming?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Multiprogramming increases CPU utilization by organizing jobs so that the CPU always has one to execute.</span>"
            ],
            "guid": "KSeys0g.nV",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is multitasking?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Multitasking is a logical extension of multiprogramming where the CPU switches between processes frequently to provide a fast response to the user.</span>"
            ],
            "guid": "n@R@%rW|yB",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is CPU scheduling?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">CPU scheduling is the process of choosing which process will run next.</span>"
            ],
            "guid": "wEg^9dy%sc",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is virtual memory?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Virtual memory allows programs to be larger than physical memory by abstracting main memory into a uniform array of storage.</span>"
            ],
            "guid": "i^^pc`hrMv",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two modes of operation?<br><br>The two modes of operation are:<br><ul><li>{{c1::<strong>User mode:</strong> where user applications run.}}<br></li><li>{{c2::<strong>Kernel mode (also called supervisor mode, system mode, or privileged mode):</strong> where the operating system runs.&nbsp;}}<br></li></ul>{{c3::A mode bit indicates which mode the system is in.}}<br>",
                ""
            ],
            "guid": "n!.e[-VzDX",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are privileged instructions?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Privileged instructions can only be executed in kernel mode to ensure the proper operation of the system. Examples include I/O control, timer management, and interrupt management.</span>"
            ],
            "guid": "A7%-?AmtIE",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a timer?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A timer can be set to interrupt the computer after a specified period. It is used to maintain control over the CPU and prevent a program from getting stuck in an infinite loop.</span>"
            ],
            "guid": "Qa}u4kWgj{",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a process?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A process is a program in execution and is the unit of work in a system. A process needs resources, including CPU time, memory, and I/O devices, to execute.</span>"
            ],
            "guid": "Mhr<~#nO}T",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are the responsibilities of the operating system with respect to process management?<br></span><br>The operating system is responsible for:<br><ul><li>{{c1::Creating and deleting user and system processes}}</li><li>{{c2::Scheduling processes and threads on the CPUs}}</li><li>{{c3::Suspending and resuming processes}}</li><li>{{c4::Providing mechanisms for process synchronization}}</li><li>{{c5::Providing mechanisms for process communication}}</li></ul>",
                ""
            ],
            "guid": "k@:C@|n,qP",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the operating system responsible for in regards to memory management?<br></span><br>The operating system is responsible for:<br><ul><li>{{c1::Keeping track of which parts of memory are currently being used and by whom}}</li><li>{{c2::Allocating and deallocating memory space as needed}}</li><li>{{c3::Deciding which processes and data to move into and out of memory}}</li></ul>",
                ""
            ],
            "guid": "OC-qxt7CcY",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the operating system responsible for in regards to file-system management?<br></span><br>The operating system is responsible for:<br><ul><li>{{c1::Creating and deleting files}}</li><li>{{c2::Creating and deleting directories to organize files}}</li><li>{{c3::Supporting primitives for manipulating files and directories}}</li><li>{{c4::Mapping files onto mass storage}}</li><li>{{c5::Backing up files on stable storage media}}</li></ul>",
                ""
            ],
            "guid": "gaXYI.dsCo",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the operating system responsible for in regards to mass-storage management?<br></span><br>The operating system is responsible for:<br><ul><li>{{c1::Mounting and unmounting storage}}</li><li>{{c2::Free space management}}</li><li>{{c3::Storage allocation}}</li><li>{{c4::Disk scheduling}}</li><li>{{c5::Partitioning}}</li><li>{{c6::Protection}}</li></ul>",
                ""
            ],
            "guid": "i=T3:f9v3g",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is caching?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Caching involves copying information into a faster storage system, the cache, on a temporary basis. It speeds up access to frequently used data.</span>"
            ],
            "guid": "nskCmDqq8A",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the I/O subsystem?<br></span><br><span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">The I/O subsystem is responsible for&nbsp;</span>{{c1::managing I/O operations}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">. It includes a&nbsp;</span>{{c2::memory-management component}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">, a&nbsp;</span>{{c3::general device-driver interface}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">, and&nbsp;</span>{{c4::drivers for specific hardware devices}}<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">.</span>",
                ""
            ],
            "guid": "f^Y>q2`P?`",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the key aspects of a computer system in terms of security and protection?<br><b><br></b>A system must provide {{c1::protection}} by {{c2::controlling access to system resources}}, while {{c3::security}} involves {{c4::defending the system from internal and external attacks}}. {{c3::Security}} also involves {{c5::maintaining a list of user names and associated user IDs, or group identifiers}}.",
                ""
            ],
            "guid": "CUHRaOH4lT",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is virtualization?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Virtualization is a technology that allows the abstraction of hardware to create virtual environments for running multiple operating systems on the same physical computer.</span>"
            ],
            "guid": "nTX*,X47Pr",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is emulation?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Emulation is when software simulates computer hardware.</span>"
            ],
            "guid": "Obx#ss*T$^",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a virtual machine manager (VMM)?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A VMM manages the virtual machines, controls their resource use, and protects them from each other.</span>"
            ],
            "guid": "BGD;uB/uEO",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a distributed system?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A distributed system is a collection of separate computer systems that are networked to provide access to shared resources.</span>"
            ],
            "guid": "en/{0/Ol,^",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a network?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A network is a communication path between two or more systems. Networks vary based on distance and types of connections [33]. Common types include LANs, WANs, MANs, and PANs.</span>"
            ],
            "guid": "i#0~BYFMgt",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a network operating system?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A network operating system provides features such as file sharing across the network. A distributed operating system presents a less autonomous environment.</span>"
            ],
            "guid": "hXr&]4!39j",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a disk block?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A medium-sized disk drive might be divided into several thousand individual units, or disk blocks.</span>"
            ],
            "guid": "HDM;b;4F3U",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are the key characteristics of traditional computing?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Traditional computing involved PCs connected to a network with servers providing file and print services. Remote access and portability were achieved through technologies such as laptop computers.</span>"
            ],
            "guid": "zxE70u}08j",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are thin clients?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Thin clients are essentially terminals that understand web-based computing and are used for more security or easier maintenance.</span>"
            ],
            "guid": "u!j~A]3YwN",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is real-time embedded computing?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Real-time embedded systems are used when rigid time requirements have been placed on the operation of a processor. They have limited user interface and often need to respond within a defined time or the system will fail.</span>"
            ],
            "guid": "iY6~uN&s1^",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is free and open-source software?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Free software is licensed to allow no-cost use, redistribution, and modification. Open-source software makes the source code available, but does not necessarily offer such licensing.</span>"
            ],
            "guid": "Jkzj`2f,P|",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is copyleft?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Copyleft is a form of licensing invented by Stallman that allows a work to be copied, modified, and distributed, but requires that all derivative works must also be licensed under the same copyleft license.</span>"
            ],
            "guid": "wUm+1ZI&ip",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are some examples of free and open-source operating systems?<br></span><br><span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Examples of free and open-source operating systems include:</span><br style=\"color: rgb(19, 19, 20);\"><ul style=\"color: rgb(19, 19, 20);\"><li>{{c1::GNU/Linux}}<br></li><li>{{c2::FreeBSD}}<br></li><li><span style=\"background-color: rgb(255, 255, 255);\">{{c3::Solaris}}</span></li></ul>",
                ""
            ],
            "guid": "w?^-H_arh5",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "List the main services provided by an operating system.<br><ul><li>{{c1::<strong>User Interface:</strong> Provides ways for users to interact with the system (GUI, CLI, touch-screen).}}<br></li><li>{{c2::<strong>Program Execution:</strong> Loads and executes programs.}}<br></li><li>{{c3::<strong>I/O Operations:</strong> Manages input/output devices.}}<br></li><li>{{c4::<strong>File-system Manipulation:</strong> Creates, deletes, and manages files and directories.}}<br></li><li>{{c5::<strong>Communications:</strong> Enables interprocess communication, either locally or across a network.}}<br></li><li>{{c6::<strong>Error Detection:</strong> Detects and handles errors.}}<br></li><li>{{c7::<strong>Resource Allocation:</strong> Manages resources such as CPU, memory, and storage.}}<br></li><li>{{c8::<strong>Logging:</strong> Tracks system usage.}}<br></li><li>{{c9::<strong>Protection and Security:</strong> Controls access to resources and ensures data security.}}<br></li></ul>",
                ""
            ],
            "guid": "utE`bNm:&S",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the three fundamental types of user interfaces provided by operating systems?<br><ul><li>{{c1::<strong>Command-line Interface (CLI):</strong> Allows users to enter commands directly.}}<br></li><li>{{c2::<strong>Graphical User Interface (GUI):</strong> Uses a mouse and icons for interaction.}}<br></li><li>{{c3::<strong>Touch-screen Interface:</strong> Uses touch gestures for interaction.}}<br></li></ul>",
                ""
            ],
            "guid": "HVj6Qr}~sx",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a \"command interpreter\" or \"shell\"?<br><br>A command interpreter or shell is a {{c1::program that reads commands entered by the user and executes them by translating them to system calls}}. It can be a {{c2::special program that is run when the user logs on}}. Examples include the {{c3::Bourne-Again shell (bash)}}, {{c4::C shell}}, and {{c5::Korn shell}}.",
                ""
            ],
            "guid": "bNhLz?Ppn",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a system call?<br><br>A system call is a {{c1::request by a user-level program to access a service provided by the operating system}}. It provides the {{c2::interface between a running program and the operating system}}. System calls are often written in C or C++, but may require assembly language for certain low-level tasks.",
                ""
            ],
            "guid": "J>{.g$_ut`",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an Application Programming Interface (API)?<br><br>An API {{c1::specifies a set of functions that are available to an application programmer, including the parameters and return values that can be expected}}. An API is a {{c2::higher-level interface built on top of system calls}}. The API makes the system calls more convenient for the programmer.",
                ""
            ],
            "guid": "jj-*~Grigg",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">How are parameters passed during a system call?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Parameters for system calls can be passed in registers, in a block of memory, or on a stack. Linux uses a combination of these approaches.</span>"
            ],
            "guid": "l/oy!;iB#r",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the major categories of system calls?<br><ul><li>{{c1::Process Control}}</li><li>{{c2::File Management}}</li><li>{{c3::Device Management}}</li><li>{{c4::Information Maintenance}}</li><li>{{c5::Communications}}</li><li>{{c6::Protection}}</li></ul>",
                ""
            ],
            "guid": "ts{gD0>oY%",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a run-time environment (RTE)?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">The RTE is the full suite of software needed to execute applications written in a given programming language including compilers, interpreters, libraries, and loaders.</span>"
            ],
            "guid": "Q)ZPU7sY;>",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a \"boot loader\"?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A boot loader is a small piece of software that loads the operating system kernel into memory when a computer is started. It initializes the system and prepares it for the operating system to take over.</span>"
            ],
            "guid": "A,]_?u@QX`",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Describe the concept of a \"monolithic\" operating system structure.</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A monolithic operating system has </span><strong>no structure</strong><span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">; all its functionality is contained in a single binary file that runs in a single address space. This approach is simple, but can be difficult to modify or debug. Examples include older versions of UNIX and Linux.</span>"
            ],
            "guid": "y+fIO7ayK>",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Describe the \"layered\" operating system structure.</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A layered operating system is divided into </span><strong>multiple layers</strong><span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">, where each layer depends only on the layers below it. The bottom layer is the hardware, and the highest layer is the user interface. This approach simplifies debugging and system verification.</span>"
            ],
            "guid": "HG%3.qG{jF",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Describe the \"microkernel\" operating system structure.</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A microkernel aims to keep the kernel as small as possible, with most operating system services running as user-level processes. This approach improves modularity and security. Communication between processes is typically done using message passing.</span>"
            ],
            "guid": "N(@)S<iV3~",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are \"loadable kernel modules\"?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Loadable kernel modules (LKMs) are a way of adding functionality to the operating system kernel at runtime. This approach allows for dynamic modification of the kernel without requiring a reboot. This is a modular approach.</span>"
            ],
            "guid": "lYe$Zj6.OZ",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is a \"hybrid\" operating system?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">A hybrid system combines different architectural approaches, such as monolithic and microkernel. For example, Linux is monolithic, but also supports loadable kernel modules.</span>"
            ],
            "guid": "tph5sXr9F4",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between mechanism and policy in operating system design?<br><ul><li>{{c1::<strong>Mechanism</strong> refers to <em>how</em> something is done.}}&nbsp;</li><li>{{c2::<strong>Policy</strong> refers to <em>what</em> is done.&nbsp;}}<br></li></ul>It is good to separate them for {{c3::flexibility}}. A {{c1::mechanism}} can {{c4::implement different policies}}.<br>",
                ""
            ],
            "guid": "x]%mOETh~b",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Why is it important to write an operating system in a high-level language?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Writing in high-level languages like C or C++ makes the code faster to write, more compact, and easier to understand and debug. It also makes the system easier to port to other hardware.</span>"
            ],
            "guid": "BXN$K8*Es}",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the purpose of the \"linker\" in the build process?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">The linker combines relocatable object files into a single binary executable file.</span>"
            ],
            "guid": "QaZw$YGes[",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the purpose of the \"loader\" in the build process?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">The loader loads the executable file into memory, making it ready to run.</span>"
            ],
            "guid": "PfG>nt53Ak",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the main reasons why applications are operating-system specific?<br><ul><li>{{c1::Different binary formats for program executables.}}</li><li>{{c2::Different instruction sets for different CPUs.}}</li><li>{{c3::Different system calls.}}</li></ul>",
                ""
            ],
            "guid": "qba`4Vc?b5",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What is an Application Binary Interface (ABI)?<br><br>{{c1::An ABI defines how different components of binary code can interface for a given operating system on a given architecture}}. It includes details about {{c2::data types}}, {{c3::register usage}}, and {{c4::how parameters are passed in system calls}}.",
                ""
            ],
            "guid": "cq^V[3Wz7J",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the two primary goals in designing an operating system?<br><ul><li>{{c1::<strong>User goals:</strong> The system should be convenient to use, easy to learn, reliable, safe, and fast.}}<br></li><li>{{c2::<strong>System goals:</strong> The system should be easy to design, implement, maintain, and should be flexible, reliable, error-free, and efficient.}}<br></li></ul>",
                ""
            ],
            "guid": "cgK?k1-,%B",
            "note_model_uuid": "baf95efe-c3fc-11ef-add0-7d43f340fc4e",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is \"system generation\" or \"system build\"?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">It's the process of configuring an operating system. It specifies which features are included, and varies the configuration based on the system for which the operating system is being built.</span>"
            ],
            "guid": "Kb6o4p^Hh,",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is \"debugging\" in the context of operating systems?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Debugging is the process of identifying and fixing errors in both the hardware and the software of a system. It includes failure analysis and performance tuning.</span>"
            ],
            "guid": "m?+q+@s8BC",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What are \"counters\" in operating system debugging and performance tuning?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Counters are a collection of system-wide or per-process statistics. They keep track of system activity, such as the number of system calls made, or the number of operations on a disk or network.</span>"
            ],
            "guid": "BoJV&2|:vl",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is \"tracing\" in operating system debugging and performance tuning?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">Tracing involves following the execution of a program, often using system-call invocations, to identify bottlenecks or other performance issues.</span>"
            ],
            "guid": "v`sJj#U-vE",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">What is the BCC (BPF Compiler Collection)?</span>",
                "<span style=\"color: rgb(19, 19, 20); background-color: rgb(255, 255, 255);\">BCC is a toolkit for dynamic kernel tracing in Linux. It's written in Python, embeds C code, and interfaces with eBPF. This tool helps to debug interactions between the user-level and kernel code.</span>"
            ],
            "guid": "nrc~~M%4Ou",
            "note_model_uuid": "50989b18-bf5d-11ef-b4fe-25358fe4e4db",
            "tags": []
        }
    ],
    "reviewLimit": null,
    "reviewLimitToday": null
}